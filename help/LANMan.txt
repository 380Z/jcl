<DECL>--------------------------------------------------------------------------
[Declaration]
function CreateAccount(const Server, Username, Fullname, Password, Description, Homedir, Script: string): boolean;
[ShortDescr]
Creates a new user account on a Windows NT machine.
[Description]
CreateAccount creates a new user account on a Windows NT machine using the LAN
Manager API. Thus, you cannot create user accounts on Windows 9x or Windows Me
machines.
[Parameters]
Count=7
1=Server:string=The name of the server to create the user account on. If this parameter
is the empty string, the account will be created on the local machine.
2=Username:string=Specifies the name of the user account.
3=Fullname:string=The full name of the user.
4=Password:string=The password for the user account.
5=Description:string=A comment to be associated with this user account. This parameter can be empty.
6=Homedir:string=The user's home directory. This parameter can be empty.
7=Script:string=Path to the user's logon script (which can be a .CMD, .EXE or .BAT file).
This parameter can be empty.
[Result]
If the function succeeds it returns True, otherwise it returns False.
[Quick Info]
Unit=JclLANMan
Category=LAN Manager
SubCat=User Management
Author=Peter Friese;freter@gmx.net
Delphi=3,4,5
Windows NT/2000=Requires Windows NT 3.1 or later.
Windows 95/98=Unsupported.
[SeeAlso]
Count=1
1=CreateLocalAccount
[Notes]
Count=1
1=If the function returns False, the user can retrieve extended error information by
calling RaiseLastOSException.
<DECL>--------------------------------------------------------------------------
[Declaration]
function CreateLocalAccount(const Username, Fullname, Password, Description, Homedir, Script: string): Boolean;
[ShortDescr]
Creates a new user account on a local Windows NT machine.
[Description]
CreateAccount creates a new user account on the local Windows NT machine using the LAN
Manager API. Thus, you cannot create user accounts on Windows 9x or Windows Me
machines.
[Parameters]
Count=6
1=Username:string=Specifies the name of the user account.
2=Fullname:string=The full name of the user.
3=Password:string=The password for the user account.
4=Description:string=A comment to be associated with this user account. This parameter can be empty.
5=Homedir:string=The user's home directory. This parameter can be empty.
6=Script:string=Path to the user's logon script (which can be a .CMD, .EXE or .BAT file).
This parameter can be empty.
[Result]
If the function succeeds it returns True, otherwise it returns False.
[Quick Info]
Unit=JclLANMan
Category=LAN Manager
SubCat=User Management
Author=Peter Friese;freter@gmx.net
Delphi=3,4,5
Windows NT/2000=Requires Windows NT 3.1 or later.
Windows 95/98=Unsupported.
[SeeAlso]
Count=1
1=CreateAccount
[Notes]
Count=1
1=If the function returns False, the user can retrieve extended error information by
calling RaiseLastOSException.
<DECL>--------------------------------------------------------------------------
[Declaration]
function DeleteAccount(const Servername, Username: string): Boolean;
[ShortDescr]
Deletes a user account from the given Windows NT machine.
[Description]
DeleteAccount permanently removes the given user account from the account database
on the Windows NT machine specified by Servername.
[Parameters]
Count=2
1=Servername:string=The name of the Windows NT machine to delete the account from.
If this parameter is empty, the account will be deleted from the local machine.
2=Username:string=Specifies the name of the user account.
[Result]
If the function succeeds it returns True, otherwise it returns False.
[Quick Info]
Unit=JclLANMan
Category=LAN Manager
SubCat=User Management
Author=Peter Friese;freter@gmx.net
Delphi=3,4,5
Windows NT/2000=Requires Windows NT 3.1 or later.
Windows 95/98=Unsupported.
[SeeAlso]
Count=3
1=DeleteLocalAccount
2=CreateLocalAccount
3=CreateAccount
[Notes]
Count=3
1=If the function returns False, the user can retrieve extended error information by
calling RaiseLastOSException.
2=If you want to delete a user account from the domain account database, you should
keep in mind to supply the name of the primary domain controller (PDC) in the
parameter Servername.
3=If the user name is not found in the user account database specified, it will fail.
<DECL>--------------------------------------------------------------------------
[Declaration]
function DeleteLocalAccount(Username: string): Boolean;
[ShortDescr]
Deletes a user account from the local Windows NT machine.
[Description]
DeleteAccount permanently removes the given user account from the local account
database on a Windows NT machine.
[Parameters]
Count=1
1=Username:string=Specifies the name of the user account.
[Result]
If the function succeeds it returns True, otherwise it returns False.
[Quick Info]
Unit=JclLANMan
Category=LAN Manager
SubCat=User Management
Author=Peter Friese;freter@gmx.net
Delphi=3,4,5
Windows NT/2000=Requires Windows NT 3.1 or later.
Windows 95/98=Unsupported.
[SeeAlso]
Count=3
1=DeleteAccount
2=CreateLocalAccount
3=CreateAccount
[Notes]
Count=3
1=If the function returns False, the user can retrieve extended error information by
calling RaiseLastOSException.
2=If you want to delete a user account from the domain account database, you should
keep in mind to supply the name of the primary domain controller (PDC) in the
parameter Servername.
3=If the user name is not found in the user account database specified, it will fail.
<DECL>--------------------------------------------------------------------------
[Declaration]
function CreateLocalGroup(const Server, Groupname, Description: string): Boolean;
[ShortDescr]
Creates a local group on a Windows NT machine.
[Description]
CreateLocalGroup creates a local group in the acount database on the Windows NT
machine specified by Server.
[Parameters]
Count=3
1=Server:string=The name of the machine to create the group account on.
2=Groupname:string=The name of the group to be created.
3=Description:string=A description for the group.
[Result]
If the function succeeds it returns True, otherwise it returns False.
[Quick Info]
Unit=JclLANMan
Category=LAN Manager
SubCat=Group Management
Author=Peter Friese;freter@gmx.net
Delphi=3,4,5
Windows NT/2000=Requires Windows NT 3.1 or later.
Windows 95/98=Unsupported.
[SeeAlso]
Count=2
1=CreateGlobalGroup
2=DeleteLocalGroup
[Notes]
Count=1
1=If the function returns False, the user can retrieve extended error information by
calling RaiseLastOSException.
<DECL>--------------------------------------------------------------------------
[Declaration]
function CreateGlobalGroup(const Server, Groupname, Description: string): Boolean;
[ShortDescr]
Creates a global group on a Windows NT machine.
[Description]
CreateGlobalGroup creates a global group in the acount database on the Windows NT
machine specified by Server.
[Parameters]
Count=3
1=Server:string=The name of the machine to create the group account on.
2=Groupname:string=The name of the group to be created.
3=Description:string=A description for the group.
[Result]
If the function succeeds it returns True, otherwise it returns False.
[Quick Info]
Unit=JclLANMan
Category=LAN Manager
SubCat=Group Management
Author=Peter Friese;freter@gmx.net
Delphi=3,4,5
Windows NT/2000=Requires Windows NT 3.1 or later.
Windows 95/98=Unsupported.
[SeeAlso]
Count=2
1=CreateLocalGroup
2=DeleteLocalGroup
[Notes]
Count=1
1=If the function returns False, the user can retrieve extended error information by
calling RaiseLastOSException.
<DECL>--------------------------------------------------------------------------
[Declaration]
function DeleteLocalGroup(const Server, Groupname: string): Boolean;
[ShortDescr]
Deletes a local group from a Windows NT machine.
[Description]
DeleteLocalGroup deletes a local group from the acount database on the Windows NT
machine specified by Server.
[Parameters]
Count=2
1=Server:string=The name of the machine to delete the group account from.
2=Groupname:string=The name of the group to be deleted.
[Result]
If the function succeeds it returns True, otherwise it returns False.
[Quick Info]
Unit=JclLANMan
Category=LAN Manager
SubCat=Group Management
Author=Peter Friese;freter@gmx.net
Delphi=3,4,5
Windows NT/2000=Requires Windows NT 3.1 or later.
Windows 95/98=Unsupported.
[SeeAlso]
Count=2
1=CreateLocalGroup
2=CreateGlobalGroup
[Notes]
Count=1
1=If the function returns False, the user can retrieve extended error information by
calling RaiseLastOSException.
<DECL>--------------------------------------------------------------------------
[Declaration]
function GetLocalGroups(const Server: string; const Groups: TStrings): boolean;
[ShortDescr]
Retrieves a list of local groups on a Windows NT machine.
[Description]
GetLocalGroups retrieves a list of local groups from the account database
specified by Server.
[Parameters]
Count=2
1=Server:string=The name of the machine retrieve the list of groups from.
2=Groups:TStrings=This string list will contain the group names.
[Result]
If the function succeeds it returns True, otherwise it returns False.
[Quick Info]
Unit=JclLANMan
Category=LAN Manager
SubCat=Group Management
Author=Peter Friese;freter@gmx.net
Delphi=3,4,5
Windows NT/2000=Requires Windows NT 3.1 or later.
Windows 95/98=Unsupported.
[SeeAlso]
Count=1
1=GetGlobalGroups
[Notes]
Count=1
1=If the function returns False, the user can retrieve extended error information by
calling RaiseLastOSException.
<DECL>--------------------------------------------------------------------------
[Declaration]
function GetGlobalGroups(const Server: string; const Groups: TStrings): boolean;
[ShortDescr]
Retrieves a list of global groups on a Windows NT machine.
[Description]
GetLocalGroups retrieves a list of global groups from the account database
specified by Server.
[Parameters]
Count=2
1=Server:string=The name of the machine to retrieve the list of groups from.
2=Groups:TStrings=This string list will contain the group names.
[Result]
If the function succeeds it returns True, otherwise it returns False.
[Quick Info]
Unit=JclLANMan
Category=LAN Manager
SubCat=Group Management
Author=Peter Friese;freter@gmx.net
Delphi=3,4,5
Windows NT/2000=Requires Windows NT 3.1 or later.
Windows 95/98=Unsupported.
[SeeAlso]
Count=1
1=GetLocalGroups
[Notes]
Count=1
1=If the function returns False, the user can retrieve extended error information by
calling RaiseLastOSException.
<DECL>--------------------------------------------------------------------------
[Declaration]
function LocalGroupExists(const Group: string): boolean;
[ShortDescr]
Checks whether a given group exists in the local account database.
[Description]
LocalGroupExists checks whether the group specified in the parameter Group exists
in the local account database.
[Parameters]
Count=1
1=Group:string=The name of the account to check for.
[Result]
If the account exists, the function returns True, otherwise it returns False.
[Quick Info]
Unit=JclLANMan
Category=LAN Manager
SubCat=Group Management
Author=Peter Friese;freter@gmx.net
Delphi=3,4,5
Windows NT/2000=Requires Windows NT 3.1 or later.
Windows 95/98=Unsupported.
[SeeAlso]
Count=1
1=GlobalGroupExists
[Notes]
Count=1
1=If the function returns False, the user can retrieve extended error information by
calling RaiseLastOSException.
<DECL>--------------------------------------------------------------------------
[Declaration]
function GlobalGroupExists(const Server, Group: string): boolean;
[ShortDescr]
Checks whether a given group exists in the local account database of the given server.
[Description]
GlobalGroupExists checks whether the group specified in the parameter Group exists
in the local account database of the server specified in the parameter Server.
[Parameters]
Count=2
1=Server:string=The name of the server to check.
2=Group:string=The name of the account to check for.
[Result]
If the account exists, the function returns True, otherwise it returns False.
[Quick Info]
Unit=JclLANMan
Category=LAN Manager
SubCat=Group Management
Author=Peter Friese;freter@gmx.net
Delphi=3,4,5
Windows NT/2000=Requires Windows NT 3.1 or later.
Windows 95/98=Unsupported.
[SeeAlso]
Count=1
1=LocalGroupExists
[Notes]
Count=1
1=If the function returns False, the user can retrieve extended error information by
calling RaiseLastOSException.
<DECL>--------------------------------------------------------------------------
[Declaration]
function AddAccountToLocalGroup(const Accountname, Groupname: string): Boolean;
[ShortDescr]
Adds an account to a local group.
[Description]
AddAccountToLocalGroup adds an existing account to a local group in the local
account database. The account can be a local or global account.
[Parameters]
Count=2
1=Accountname:string=The name of the account to add to the local group. This can
be a global or local account.
2=Groupname:string=The name of the group the account is added to.
[Result]
If the function succeeds, the result is True, otherwise it is False.
[Quick Info]
Unit=JclLANMan
Category=LAN Manager
SubCat=Group Management
Author=Peter Friese;freter@gmx.net
Delphi=3,4,5
Windows NT/2000=Requires Windows NT 3.1 or later.
Windows 95/98=Unsupported.
[Notes]
Count=1
1=If the function returns False, the user can retrieve extended error information by
calling RaiseLastOSException.
<DECL>--------------------------------------------------------------------------
[Declaration]
function LookupGroupName(const Server: string; const RID: <REF Target"Types\TNetWellKnownRID">TNetWellKnownRID</REF>): string;
[ShortDescr]
Returns the textual representation of a well-know account.
[Description]
LookupGroupName returns the textual description of a well-known group account.
[Parameters]
Count=2
1=Server:string=This server's account database will be scanned.
2=RID:TNetWellKnownRID=A well known group name.
[Result]
Textual represantation of the well known group name.
[Quick Info]
Unit=JclLANMan
Category=LAN Manager
SubCat=Group Management
Author=Peter Friese;freter@gmx.net
Delphi=3,4,5
Windows NT/2000=Requires Windows NT 3.1 or later.
Windows 95/98=Unsupported.
[SeeAlso]
Count=1
1=TNetWellKnownRID;Types\TNetWellKnownRID
<DECL>--------------------------------------------------------------------------
[Declaration]
procedure ParseAccountName(const QualifiedName: string; var Domain, UserName: string);
[ShortDescr]
Split up a qualified account name.
[Description]
ParseAccountName splits up a qualified account name (like DOMAIN-JEDI\PeterF)
into it's two parts domain and user name.
[Parameters]
Count=3
1=QualifiedName:string=The qualified name to split up.
2=Domain:string=Returns the name of the domain specified in the qualified name.
3=UserName:string=Returns the name of the user specified in the qualified name.
[Quick Info]
Unit=JclLANMan
Category=LAN Manager
SubCat=Auxilliary functions
Author=Peter Friese;freter@gmx.net
Delphi=3,4,5
Windows NT/2000=Yes
Windows 95/98=Yes
[Notes]
Count=1
1=If the parameter QualifiedName does not contain a fully qualified account name,
the function will assume that the QualifiedName is the user's name.
<DECL>--------------------------------------------------------------------------
[Declaration]
function IsLocalAccount(const AccountName: string): boolean;
[ShortDescr]
Checks whether an accoun is a local account.
[Description]
IsLocalAccount whether the account name specified in AccountName is a local account.
[Parameters]
Count=1
1=AccountName:string=The name of the account to be checked.
[Result]
If the account is a local account, the functin returns True, otherwise it returns
False.
[Quick Info]
Unit=JclLANMan
Category=LAN Manager
SubCat=Auxilliary functions
Author=Peter Friese;freter@gmx.net
Delphi=3,4,5
Windows NT/2000=Yes
Windows 95/98=Yes
<DECL>--------------------------------------------------------------------------
[Declaration]
TNetWellKnownRID = (wkrAdmins, wkrUsers, wkrGuests, wkrPowerUsers, wkrBackupOPs, wkrReplicator, wkrEveryone);
[ShortDescr]
Well-known group accounts.
[Description]
TNetWellKnownRID is an enumeration of well-known group accounts on Windows NT and
Windows 2000 machines. It is used in conjunction with <REF Target"..\LookupGroupName">LookupGroupName</REF>.
[Enumeration]
Count=7
1=wkrAdmins=The administrators' group.
2=wkrUsers=The users' group.
3=wkrGuests=The guests' group.
4=wkrPowerUsers=The power users' group.
5=wkrBackupOPs=The backup operators' group.
6=wkrReplicator=The replicators' group.
7=wkrEveryone=All users belong to the everyone group.
[Quick Info]
Kind=Type
Unit=JclLANMan
Category=LAN MAnager
SubCat=Group Management
Author=Peter Friese;freter@gmx.net
Delphi=3,4,5
