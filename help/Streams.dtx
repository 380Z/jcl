@@TJclCRC16Stream
Summary:
  The TJclCRC16Stream stores data in a protected stream.
Description:
  The TJclCRC16Stream stores data in a protected stream.

  Every block of data is followed by a checksum computed by the
  Cyclic Redundancy Check algorithm on 16 bit. This checksum is
  able to repair errors in the stream. Current implementation
  can repair one damaged bit.

  All checksum computations and checks are transparent, this
  stream can be used as any other regular Stream. Use the Flush
  method to force data to be written from the internal buffer.
See also:
  TJclCRC32Stream
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclCRC16Stream.AfterBlockRead
Summary:
  This function checks data after reading and eventually
  correct damaged bits in it.
See also:
  TJclCRC16Stream.BeforeBlockWrite
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclCRC16Stream.BeforeBlockWrite
Summary:
  This function computes checksum before writing data to the
  storage stream.
See also:
  TJclCRC16Stream.AfterBlockRead
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclCRC16Stream.Create@TStream@Boolean
Summary:
  Constructor for the TJclCRC16Stream class.
Parameters:
  AStorageStream - Stream storing protected data and checksums.
                   Data in this stream are larger than original
                   ones because of checksums (2 bytes each)
                   being inserted after each predefined length
                   block.
  AOwnsStream    - If set, the stream will be freed when this
                   instance of TJclCRC16Stream will be
                   destroyed.
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclCRC32Stream
Summary:
  The TJclCRC32Stream stores data in a protected stream.
Description:
  The TJclCRC32Stream stores data in a protected stream.

  Every block of data is followed by a checksum computed by the
  Cyclic Redundancy Check algorithm on 32 bits. This checksum
  is able to repair errors in the stream. Current
  implementation can repair one damaged bit.

  All checksum computations and checks are transparent, this
  stream can be used as any other regular Stream. Use the Flush
  method to force data to be written from the internal buffer.
See also:
  TJclCRC16Stream
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclCRC32Stream.AfterBlockRead
Summary:
  This function checks data after reading and eventually
  correct damaged bits in it.
See also:
  TJclCRC32Stream.BeforeBlockWrite
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclCRC32Stream.BeforeBlockWrite
Summary:
  This function computes checksum before writing data to the
  storage stream.
See also:
  TJclCRC16Stream.AfterBlockRead
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclCRC32Stream.Create@TStream@Boolean
Summary:
  Constructor for the TJclCRC32Stream class.
Parameters:
  AStorageStream - Stream storing protected data and checksums.
                   Data in this stream are larger than original
                   ones because of checksums (4 bytes each)
                   being inserted after each predefined length
                   block.
  AOwnsStream    - If set, the stream will be freed when this
                   instance of TJclCRC32Stream will be
                   destroyed.
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclSectoredStream
Summary:
  TJclSectoredStream organizes data and forces read and write
  operations to storage stream to have a fixed size.
Description:
  TJclSectoredStream organizes data and forces read and write
  operations to storage stream to have a fixed size. Every
  smaller accesses are stored into a buffer which is flushed
  when full.

  Fixed size blocks are called "sector", each sector can
  contain a predefined number of bytes reserved to store a
  checksum or any other data (TJclCRC16Stream and
  TJclCRC32Stream classes use this feature). In order to set
  these bytes, this class has to be inherited and virtual
  methods TJclSectoredStream.BeforeBlockRead and
  TJclSectoredStream.AfterBlockWrite have to be overridden.
See also:
  TJclBufferedStream
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclSectoredStream.FSectorOverHead
Summary:
  Private field to store the number of additional bytes of each sector.
See also:
  TJclSectoredStream.Create
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclSectoredStream.AfterBlockRead
Summary:
  TODO
Description:
  Virtual method called after a block of data is read from
  storage stream. As implemented in this class, this function
  does nothing. In order to check checksums and/or decrypt
  data, a class that inherits from TJclSectoredStream has to
  override this procedure.

  When this function is called, bytes in FBuffer from 0 to
  FCurrentBufferSize+FBlockOverHead-1 were read from storage
  stream.

  After this function returns, bytes in FBuffer from 0 to
  FCurrentBufferSize-1 will contain data as passed to the
  caller or TStream.Read.
See also:
  TJclSectoredStream.BeforeBlockWrite
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclSectoredStream.BeforeBlockWrite
Summary:
  TODO
Description:
  Virtual method called before a block of data is written to
  storage stream. As implemented in this class, this function
  does nothing. In order to compute checksums and/or crypt
  data, a class that inherits from TJclSectoredStream has to
  override this procedure.

  When this function is called, bytes in FBuffer from 0 to
  FCurrentBufferSize-1 were written by calls to TStream.Write.

  When this function returns, bytes in FBuffer from 0 to
  FCurrentBufferSize+FBlockOverhead-1 will be written to
  storage stream.
See also:
  TJclSectoredStream.AfterBlockRead
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclSectoredStream.Create@TStream@Boolean@Integer
Summary:
  Constructor of the TJclSectoredStream class.
Parameters:
  AStorageStream  - Stream used to store data. They may be
                    larger than raw data because of OverHead
                    that can be specified for each sector.
  AOwnsStream     - If set, this stream will be destroyed when
                    this instance is destroyed.
  ASectorOverHead - Number of bytes to be added to each sector
                    of the stream.
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclSectoredStream.DoAfterStreamChange
Summary:
  Overriden method of TJclStreamDecorator.DoAfterStreamChange
  to flush and invalidate current buffer.
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclSectoredStream.FlatToSectored@Int64
Summary:
  This function translates position from flat space to sectored
  space removing overhead for each sectors before this position.
Parameters:
  Position - Position in flat space (ie in this stream space).
Result:
  Returns the position in sectored space (ie storage space).
See also:
  TJclSectoredStream.SectoredToFlat
  TJclSectoredStream.GetCalcedSize
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclSectoredStream.Flush
Summary:
  TODO
Description:
  By calling this function, modified data (if any) contained in
  current buffer are written to storage stream. Note that this
  method is automatically called when current sector is
  changed.

  In order to force data to be written, you may call this
  function.
See also:
  TJclSectoredStream.LoadBuffer
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclSectoredStream.GetCalcedSize
Summary:
  This protected function computes the real size of data
  eliminating all sector overheads of storage stream.
Result:
  Returns the computed size.
See also:
  TJclSectoredStream.FlatToSectored
  TJclSectoredStream.SectoredToFlat
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclSectoredStream.LoadBuffer
Summary:
  This protected function loads a sector from storage stream
  when needed. If some data were modified in previous sector,
  they are automatically written to storage stream.
Result:
  Returns true if any data were read.
See also:
  TJclSectoredStream.Flush
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclSectoredStream.SectoredToFlat@Int64
Summary:
  This function translates position from sectored space to flat
  space adding overhead for each sectors before this position.
Parameters:
  Position - Position in sectored space (ie storage space).
Result:
  Returns the position in flat space (ie in space exposed by this descendant of TStream).
See also:
  TJclSectoredStream.FlatToSectored
  TJclSectoredStream.GetCalcedSize
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclDelegatedStream
Summary:
  This descendant of TStream translates all calls to SetSize,
  Seek, Read and Write methods to event handlers.
See also:
  TJclEventStream
Donator:
  Florent Ocuhet
--------------------------------------------------------------------------------
@@TJclDelegatedStream.FOnRead
Summary:
  Private field to store OnRead handler.
See also:
  TJclDelegatedStream.OnSeek
  TJclDelegatedStream.OnSize
  TJclDelegatedStream.OnWrite
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclDelegatedStream.FOnSeek
Summary:
  Private field to store OnSeek handler.
See also:
  TJclDelegatedStream.OnRead
  TJclDelegatedStream.OnSize
  TJclDelegatedStream.OnWrite
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclDelegatedStream.FOnSize
Summary:
  Private field to store OnSize handler.
See also:
  TJclDelegatedStream.OnRead
  TJclDelegatedStream.OnSeek
  TJclDelegatedStream.OnWrite
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclDelegatedStream.FOnWrite
Summary:
  Private field to store OnWrite handler.
See also:
  TJclDelegatedStream.OnRead
  TJclDelegatedStream.OnSeek
  TJclDelegatedStream.OnSize
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclDelegatedStream.OnRead
<combine TJclStreamReadEvent>
Summary:
  Event handler called when the Read method is called.
See also:
  TJclDelegatedStream.OnSeek
  TJclDelegatedStream.OnSize
  TJclDelegatedStream.OnWrite
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclDelegatedStream.OnSeek
<combine TJclStreamSeekEvent>
Summary:
  Event handler called when the Seek method is called.
See also:
  TJclDelegatedStream.OnRead
  TJclDelegatedStream.OnSize
  TJclDelegatedStream.OnWrite
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclDelegatedStream.OnSize
<combine TJclStreamSizeEvent>
Summary:
  Event handler called when the SetSize method is called (on
  write of the Size property).
See also:
  TJclDelegatedStream.OnRead
  TJclDelegatedStream.OnSeek
  TJclDelegatedStream.OnWrite
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclDelegatedStream.OnWrite
<combine TJclStreamWriteEvent>
Summary:
  Event handler called when the Write method is called.
See also:
  TJclDelegatedStream.OnRead
  TJclDelegatedStream.OnSeek
  TJclDelegatedStream.OnSize
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclDelegatedStream.Read@@Longint
Summary:
  Overriden of TStream.Read, all calls to this methods are
  redirected to the OnRead event.
See also:
  TJclDelegatedStream.OnRead
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclDelegatedStream.Seek@Int64@TSeekOrigin
Summary:
  Overriden of TStream.Seek, all calls to this methods are
  redirected to the OnSeek event.
See also:
  TJclDelegatedStream.OnSeek
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclDelegatedStream.SetSize@Int64
Summary:
  Overriden of TStream.SetSize, all calls to this methods are
  redirected to the OnSize event.
See also:
  TJclDelegatedStream.OnSize
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclDelegatedStream.Write@@Longint
Summary:
  Overriden of TStream.Write, all calls to this methods are
  redirected to the OnWrite event.
See also:
  TJclDelegatedStream.OnWrite
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclStreamReadEvent
Summary:
  TODO
Parameters:
  Sender - Object that triggers the event.
  Buffer - Buffer to store read data.
  Count - Number of byte to read.
Result:
  Returns the number of bytes that were effectively read.
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclStreamSeekEvent
Summary:
  TODO
Parameters:
  Sender - Object that triggers the event.
  Offset - Number of bytes to seek from specified origin.
  Count - Origin (valid values are soBeginning, soCurrent or soEnd)
Result:
  Returns the new position from the beginning of the stream.
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclStreamSizeEvent
Summary:
  TODO
Parameters:
  Sender - Object that triggers the event.
  NewSize - Requested new size.
Donator:
  Florent Ouchet
--------------------------------------------------------------------------------
@@TJclStreamWriteEvent
Summary:
  TODO
Parameters:
  Sender - Object that triggers the event.
  Buffer - Buffer that contains data to be written.
  Count - Number of byte to write.
Result:
  Returns the number of bytes that were effectively written.
Donator:
  Florent Ouchet