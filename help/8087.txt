<DECL>--------------------------------------------------------------------------
[Declaration]
T8087Precision = (pcSingle, pcReserved, pcDouble, pcExtended);
[ShortDescr]
Used for retrieving and setting the FPU precision control.
[Enumeration]
Count=4
1=pcSingle=Single precision (short)
2=pcReserved=Reserved, never actually used (convenience)
3=pcDouble=Double precision (long)
4=pcExtended=Extended precision (temporary)
[Quick Info]
BCB=3,4,5
Kind=Type
Unit=Jcl8087
Category=Math Routines
SubCat=Hardware
Author=Marcel van Brakel;brakelm@bart.nl
Delphi=3,4,5
<DECL>--------------------------------------------------------------------------
[Declaration]
T8087Rounding = (rcNearestOrEven, rcDownInfinity, rcUpInfinity, rcChopOrTruncate);
[ShortDescr]
Enumeration used for retrieving and setting the FPU rounding control.
[Enumeration]
Count=4
1=rcNearestOrEven=Rounds to the nearest or even
2=rcDownInfinity=Rounds down towards negative infinity
3=rcUpInfinity=Rounds up towards positive infinity
4=rcChopOrTruncate=Chops or truncates towards zero
[Quick Info]
BCB=3,4,5
Kind=Type
Unit=Jcl8087
Category=Math Routines
SubCat=Hardware
Author=Marcel van Brakel;brakelm@bart.nl
Delphi=3,4,5
[SeeAlso]
Count=2
1=Get8087Rounding;..\Get8087Rounding
2=Set8087Rounding;..\Set8087Rounding
<DECL>--------------------------------------------------------------------------
[Declaration]
T8087Infinity = (icProjective, icAffine);
[ShortDescr]
Enumeration used for retrieving and setting the FPU precision control.
[Enumeration]
Count=2
1=icProjective=Infinity is always assumed to be unsigned.
2=icAffine=Allows positive and negative infinity.
[Quick Info]
BCB=3,4,5
Kind=Type
Unit=Jcl8087
Category=Math Routines
SubCat=Hardware
Author=Marcel van Brakel;brakelm@bart.nl
Delphi=3,4,5
[SeeAlso]
Count=1
1=Set8087Precision;..\Set8087Precision
2=Get8087Precision;..\Get8087Precision
<DECL>--------------------------------------------------------------------------
[Declaration]
function Set8087Infinity(const Infinity: T8087Infinity): T8087Infinity;
[ShortDescr]
Sets the infinity control of the FPU.
[Description]
Set8087Infinity adjusts the infinity control setting of the mathematical
coprocessor.
[Parameters]
Count=1
1=Infinity:<REF Target"Types\T8087Infinity">T8087Infinity</REF>=New value for the
infinity control of the FPU. See <REF Target"Types\T8087Infinity">T8087Infinity</REF>
for the possible values and their meaning.
[Result]
The old infinity setting of the FPU.
[Quick Info]
BCB=3,4,5
Unit=Jcl8087
Category=Math Routines
SubCat=Hardware
Author=Marcel van Brakel;brakelm@bart.nl
Delphi=3,4,5
[SeeAlso]
Count=7
1=Set8087Precision
2=Set8087Rounding
3=Get8087Infinity
4=Get8087Precision
5=Get8087Rounding
6=Get8087ControlWord
7=Set8087ControlWord
<DECL>--------------------------------------------------------------------------
[Declaration]
function Set8087Precision(const Precision: T8087Precision): T8087Precision;
[ShortDescr]
Sets the precision control of the FPU.
[Description]
Set8087Precision adjusts the infinity control setting of the mathematical
coprocessor.
[Parameters]
Count=1
1=Precision:<REF Target"Types\T8087Precision">T8087Precision</REF>=New value for the
precision control of the FPU. See <REF Target"Types\T8087Precision">T8087Precision</REF>
for the possible values and their meaning.
[Result]
The old precision setting of the FPU.
[Quick Info]
BCB=3,4,5
Unit=Jcl8087
Category=Math Routines
SubCat=Hardware
Author=Marcel van Brakel;brakelm@bart.nl
Delphi=3,4,5
[SeeAlso]
Count=7
1=Set8087Infinity
2=Set8087Rounding
3=Get8087Infinity
4=Get8087Precision
5=Get8087Rounding
6=Get8087ControlWord
7=Set8087ControlWord
<DECL>--------------------------------------------------------------------------
[Declaration]
function Set8087Rounding(const Rounding: T8087Rounding): T8087Rounding;
[ShortDescr]
Sets the rounding control of the FPU.
[Description]
Set8087Rounding adjusts the rounding control setting of the mathematical
coprocessor.
[Parameters]
Count=1
1=Rounding:<REF Target"Types\T8087Rounding">T8087Rounding</REF>=New value for the
rounding control of the FPU. See <REF Target"Types\T8087Rounding">T8087Rounding</REF>
for the possible values and their meaning.
[Result]
The old rounding setting of the FPU.
[Quick Info]
BCB=3,4,5
Unit=Jcl8087
Category=Math Routines
SubCat=Hardware
Author=Marcel van Brakel;brakelm@bart.nl
Delphi=3,4,5
[SeeAlso]
Count=7
1=Set8087Infinity
2=Set8087Precision
3=Get8087Infinity
4=Get8087Precision
5=Get8087Rounding
6=Get8087ControlWord
7=Set8087ControlWord
<DECL>--------------------------------------------------------------------------
[Declaration]
function Get8087Infinity: T8087Infinity;
[ShortDescr]
Returns the infinity setting of the FPU.
[Description]
Get8087Infinity returns the infinity control setting of the mathematical
coprocessor. The infinity setting controls how the FPU interprets infinity values.
[Result]
The infinity setting of the FPU in the form of an enumerated type.
See <REF Target"Types\T8087Infinity">T8087Infinity</REF> for the possible values
and their meaning.
[Quick Info]
BCB=3,4,5
Unit=Jcl8087
Category=Math Routines
SubCat=Hardware
Author=Marcel van Brakel;brakelm@bart.nl
Delphi=3,4,5
[SeeAlso]
Count=7
1=Get8087Precision
2=Get8087Rounding
3=Set8087Infinity
4=Set8087Precision
5=Set8087Rounding
6=Get8087ControlWord
7=Set8087ControlWord
<DECL>--------------------------------------------------------------------------
[Declaration]
function Get8087Precision: T8087Precision;
[ShortDescr]
Returns the precision setting of the FPU.
[Description]
Get8087Precision returns the precision control setting of the mathematical
coprocessor.
[Result]
The precision setting of the FPU. See <REF Target"Types\T8087Precision">T8087Precision</REF>
for the possible values and their meaning.
[Quick Info]
BCB=3,4,5
Unit=Jcl8087
Category=Math Routines
SubCat=Hardware
Author=Marcel van Brakel;brakelm@bart.nl
Delphi=3,4,5
[SeeAlso]
Count=7
1=Get8087Infinity
2=Get8087Rounding
3=Set8087Infinity
4=Set8087Precision
5=Set8087Rounding
6=Get8087ControlWord
7=Set8087ControlWord
<DECL>--------------------------------------------------------------------------
[Declaration]
function Get8087Rounding: T8087Rounding;
[ShortDescr]
Returns the rounding setting of the FPU.
[Description]
Get8087Rounding returns the rounding control setting of the mathematical
coprocessor.
[Result]
The rounding setting of the FPU. See <REF Target"Types\T8087Rounding">T8087Rounding</REF>
for more information about the possible values and their meaning.
[Quick Info]
BCB=3,4,5
Unit=Jcl8087
Category=Math Routines
SubCat=Hardware
Author=Marcel van Brakel;brakelm@bart.nl
Delphi=3,4,5
[SeeAlso]
Count=7
1=Get8087Infinity
2=Get8087Precision
3=Set8087Infinity
4=Set8087Precision
5=Set8087Rounding
6=Get8087ControlWord
7=Set8087ControlWord
<DECL>--------------------------------------------------------------------------
[Declaration]
function Set8087ControlWord(const Control: Word): Word;
[ShortDescr]
Sets the 80x87 control word
[Description]
Set8087ControlWord sets the 80x87 control word (register). See <REF>Get8087ControlWord</REF>
for details on the individual bits of the Control parameter.
[Parameters]
Count=1
1=Control:Word=New value for the 80x87 control word.
[Result]
Old value of the control word.
[Quick Info]
BCB=3,4,5
Unit=JclMath
Category=Math Routines
SubCat=Hardware
Author=ESB Consultancy;glenn@esbconsult.com.au
Delphi=3,4,5
[SeeAlso]
Count=2
1=Get8087ControlWord
2=Get8087StatusWord
<DECL>--------------------------------------------------------------------------
[Declaration]
function Get8087ControlWord: Word;
[ShortDescr]
Returns the 80x87 control word.
[Description]
Get8087ControlWord returns the 80x87 control word (register). This is the FPU's
register that controls how the FPU operates with regard to things such as precision,
rounding and infinity control. See the table below for the meaning of the individual
bits.
 <TABLE>
 <TR VALIGN="top">
 <TH align=left width=20%>Bit(s)</TH>
 <TH align=left width=80%>Description</TH>
 </TR>
 <TR VALIGN="top">
 <TD width=20%>0 (IM)</TD>
 <TD width=80%>Invalid operation mask</TD>
 </TR>
 <TR VALIGN="top">
 <TD width=20%>1 (DM)</TD>
 <TD width=80%>Denormalized operand mask</TD>
 </TR>
 <TR VALIGN="top">
 <TD width=20%>2 (ZM)</TD>
 <TD width=80%>Division by zero mask</TD>
 </TR>
 <TR VALIGN="top">
 <TD width=20%>3 (OM)</TD>
 <TD width=80%>Overflow mask</TD>
 </TR>
 <TR VALIGN="top">
 <TD width=20%>4 (UM)</TD>
 <TD width=80%>Underflow mask</TD>
 </TR>
 <TR VALIGN="top">
 <TD width=20%>5 (PM)</TD>
 <TD width=80%>Precision error mask</TD>
 </TR>
 <TR VALIGN="top">
 <TD width=20%>8,9 (PC)</TD>
 <TD width=80%>Precision control<BR>
   <UL>
     <LI>00 Single precision
     <LI>01 Reserved
     <LI>10 Double precision
     <LI>11 Extended precision
   </UL></TD>
 </TR>
 <TR VALIGN="top">
 <TD width=20%>10,11 (RC)</TD>
 <TD width=80%>Rounding control<BR>
   <UL>
     <LI>00 Round to nearest or even
     <LI>01 Round down
     <LI>10 Round up
     <LI>Chop or truncate toward 0
   </UL>
 </TD>
 </TR>
 <TR VALIGN="top">
 <TD width=20%>12 (IC)</TD>
 <TD width=80%>Infinity control, <UL><LI>0 projective <LI>1 affine</UL></TD>
 </TR>
 </TABLE>
[Result]
The 80x87 control word.
[Quick Info]
BCB=3,4,5
Unit=JclMath
Category=Math Routines
SubCat=Hardware
SubCat=Hardware
Author=ESB Consultancy;glenn@esbconsult.com.au
Delphi=3,4,5
[SeeAlso]
Count=2
1=Get8087StatusWord
2=Set8087ControlWord
<DECL>--------------------------------------------------------------------------
[Declaration]
function Get8087StatusWord(ClearExceptions: Boolean): Word;
[ShortDescr]
Returns the 80x87 status word.
[Description]
Get8087StatusWord returns the 80x87 status word. This is the FPU's register that
reflects it's overall status. The meaning of the individual bits are documented
in the table below.
[Parameters]
Count=1
1=ClearExceptions:Boolean=If True the function clears any pending floating point
exceptions before returning the status word. If False the function does not clear
pending exceptions (it's the difference between using FSTSW and FNSTSW).
[Result]
The contents of the 80x87 status word.<BR>
 <TABLE>
 <TR VALIGN="top">
 <TH align=left width=20%>Bit(s)</TH>
 <TH align=left width=80%>Description</TH>
 </TR>
 <TR VALIGN="top">
 <TD width=20%>0 (IE)</TD>
 <TD width=80%>Invalid error such as stack overflow/underflow.</TD>
 </TR>
 <TR VALIGN="top">
 <TD width=20%>1 (DE)</TD>
 <TD width=80%>Denormalized error meaning at least one operand was denormalized</TD>
 </TR>
 <TR VALIGN="top">
 <TD width=20%>2 (ZE)</TD>
 <TD width=80%>Zero error indicates the divisor was 0 while the dividend was
   non-zero or non-infinity</TD>
 </TR>
 <TR VALIGN="top">
 <TD width=20%>3 (OE)</TD>
 <TD width=80%>Overflow error indicating the result of an operation was too large
   to be represented. If overflow error is masked a result of infinity was returned</TD>
 </TR>
 <TR VALIGN="top">
 <TD width=20%>4 (UE)</TD>
 <TD width=80%>Underflow error indicating the result of an operation was too small
   to be represented.</TD>
 </TR>
 <TR VALIGN="top">
 <TD width=20%>5 (PE)</TD>
 <TD width=80%>Precision error indicating an operand or the result exceeds the selected precision.</TD>
 </TR>
 <TR VALIGN="top">
 <TD width=20%>6 (SF)</TD>
 <TD width=80%>Used in some newer coprocessors to denote overflow or underflow.</TD>
 </TR>
 <TR VALIGN="top">
 <TD width=20%>7 (ES)</TD>
 <TD width=80%>Error summary is set if any of the unmasked error bits is set.</TD>
 </TR>
 <TR VALIGN="top">
 <TD width=20%>8-10, 14 (C0-C2,C3)</TD>
 <TD width=80%>Condition code bits indicate certain conditions such as NAN. These
   are opcode dependent. See the Intel reference.</TD>
 </TR>
 <TR VALIGN="top">
 <TD width=20%>11-13 (TOP)</TD>
 <TD width=80%>Stack top pointer. Register which functions as top of stack,
   usually 0.</TD>
 </TR>
 <TR VALIGN="top">
 <TD width=20%>15 (B)</TD>
 <TD width=80%>Busy bit indicating the coprocessor is performing some task.</TD>
 </TR>
 </TABLE>
[Quick Info]
BCB=3,4,5
Unit=JclMath
Category=Math Routines
SubCat=Hardware
Author=Marcel van Brakel;brakelm@bart.nl
Delphi=3,4,5
[SeeAlso]
Count=2
1=Set8087ControlWord
2=Get8087ControlWord
