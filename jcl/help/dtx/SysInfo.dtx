@@RunningProcessesList
<GROUP SystemInformationRoutines.ProcessesTasksandModules>
Summary:
  Returns a list of all running processes.
Description:

  RunningProcessesList fills the List parameter with a list of all running processes.
Parameters:
  List - The list which is filled with the names of all running processes. Note that if this function is executed NT 3 or NT 4 the Objects property of the list contains INVALID_HANDLE_VALUE, on all other systems the Objects property is filled with the ToolHelp Process ID which you can use to further investigate the process.
  FullPath - If True the names of processes in the list are expanded to include the full path of the executable file. If False only the process name (filename of the executable) is put in the list.
Result:

  If the function succeeds it returns True, otherwise it returns False. In the latter
  case the contents of the list is undefined.
Notes:

  On Windows NT/2000 there exists two processes with PIDs 0 and 2 (8 on Windows 2000) which do not map to an executable image file. The names of these processes are fabricated by the routine as "System Idle Process" and "System Process" respectively.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Petr Vones
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
--------------------------------------------------------------------------------
@@LoadedModulesList
<GROUP SystemInformationRoutines.ProcessesTasksandModules>
Summary:
  Returns the list of modules loaded by a process.
Description:

  Returns a list of modules (dynamic link libraries) which are in use (loaded) by
  the process specified by ProcessID.
Parameters:
  List - List which receives the name of each loaded module. Each entry contains the full path to the modules image file.
  ProcessID - Process ID of the process for which you want a list of loaded modules. To get the list of modules for the current process pass in the return value of the GetCurrentProcessID API function.
Result:

  If the function it returns True, otherwise it returns False. In this latter case
  the contents of the list are undefined.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Petr Vones
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
--------------------------------------------------------------------------------
@@GetTasksList
<GROUP SystemInformationRoutines.ProcessesTasksandModules>
Summary:
  Returns a list of running tasks.
Description:

  Returns a list of running tasks. This is similar to the items visible on the
  Applications tab of the Windows NT task manager. The routine uses a similar method
  to discover all running tasks (described on http://msdn.microsoft.com/library/periodic/period97/win321197.htm)
  but is not always accurate.
Parameters:
  List - List which receives the running tasks.
Result:

  If the function succeeds it returns True, otherwise it returns False. In this
  latter case the contents of the list are undefined.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Petr Vones
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
--------------------------------------------------------------------------------
@@IsWindowResponding
<GROUP SystemInformationRoutines.ProcessesTasksandModules>
Summary:
  Determines whether a windows is responding to messages.
Description:

  The IsWindowResponding function determines whether the window specified by the
  Wnd parameter is still responding to messages. In effect this determines whether
  the window "is hung" by the user perception. In reality the thread which "owns"
  the window may not actually be hung but is too busy (in some kind of loop or by
  a blocking wait operation) to receive messages.
Parameters:
  Wnd - Handle to the window which you want to test.
  Timeout - Timeout in milliseconds. The function send a bogus message to the window and then waits the specified time out value before returning. If the window responds to the message within the timeout value or Windows itself detects, by some other means, that the specified window is hung, the function may return earlier.
Result:

  If the window is not responding the function returns False, otherwise it returns
  True.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Petr Vones
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
--------------------------------------------------------------------------------
@@GetWindowIcon
<GROUP SystemInformationRoutines.ProcessesTasksandModules>
Summary:
  Returns the icon of a window.
Description:

  Returns a handle to the icon of the specified window.
Parameters:
  Wnd - Handle to the window for which to retrieve an icon.
  LargeIcon - If True the function returns the large icon. If False the function returns the small icon. Note that the dimension of large and small can be retrieved by the GetSystemMetrics API function using the SM_C<X>ICON and SM_C<X>SMICON flags respectively (where <X> is either X or Y for the width and height respectively).
Result:

  If the function succeeds it returns a handle to the requested icon, otherwise
  it returns 0. In case of success you must release the handle by calling the
  DestroyIcon API function.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Petr Vones
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
--------------------------------------------------------------------------------
@@TerminateTask
<GROUP SystemInformationRoutines.ProcessesTasksandModules>
Summary:
  Terminates the application which owns the specified window.
Description:

  Terminates the application which owns the specified window. For further details
  see the TerminateApp function/
Parameters:
  Wnd - Handle to a top-level window owned by the application you wish to terminate.
  Timeout - Timeout value, in milliseconds, indicating the time to wait between sending the WM_CLOSE message and forcefully terminating the application. You should set this timeout value to at least 5 seconds.
Result:

  If the function succeeds to normally terminate the application (through the WM_CLOSE
  message) it returns taClean. If the function had to terminate the application by
  a call to TerminateProcess it returns taKill. If the function fails to terminate
  the application it returns taError.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Petr Vones
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
--------------------------------------------------------------------------------
@@TerminateApp
<GROUP SystemInformationRoutines.ProcessesTasksandModules>
Summary:
  Terminates the application specified by ProcessID.
Description:

  Terminates the application specified by ProcessID. The function first attempts
  to terminate the application normally by sending it a WM_CLOSE message. If the
  application doesn't terminate itself in response to that message and within the
  specified timeout period, the function continues to forcefully terminate the
  application using the TerminateProcess function. In this latter case the application
  gets no change whatsoever to clean up it's resources and as such this may lead
  to data loss. Be carefull and very sure there's no other way! The logic used
  by this function is described in knowledge base article Q178893.
Parameters:
  ProcessID - Process ID of the application to terminate.
  Timeout - Timeout value, in milliseconds, indicating the time to wait between sending the WM_CLOSE message and forcefully terminating the application. You should set this timeout value to at least 5 seconds.
Result:

  If the function succeeds to normally terminate the application (through the WM_CLOSE
  message) it returns taClean. If the function had to terminate the application by
  a call to TerminateProcess it returns taKill. If the function fails to terminate
  the application it returns taError.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Petr Vones
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
--------------------------------------------------------------------------------
@@GetProcessNameFromWnd
<GROUP SystemInformationRoutines.ProcessesTasksandModules>
Summary:
  Returns the name of the process which owns a specific window.
Description:

  GetProcessNameFrmWnd returns the name of the process which owns the window as
  specified by the window's handle. Note that in order to find the process identifier
  of the process that owns the specified window, you can use the GetWindowThreadProcessId
  API function.
Parameters:
  Wnd - Handle of the window for which to return the process name. This can be any type of window, including child windows such as buttons or edit boxes.
Result:

  If the function succeeds it returns the name of the process that owns the windows,
  if it fails the result is an empty string.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Petr Vones
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
--------------------------------------------------------------------------------
@@GetProcessNameFromPid
<GROUP SystemInformationRoutines.ProcessesTasksandModules>
Summary:
  Returns the name of the process which is identified by PID.
Description:

  GetProcessNameFromPid returns the name of the process specified by it's process
  identifier (PID).
Parameters:
  PID - Process identifier of the process whose name to retrieve.
Result:

  If the function succeeds it returns the name of the process, if it fails it
  returns an empty string.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Marcel van Brakel
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
--------------------------------------------------------------------------------
@@GetShellProcessName
<GROUP SystemInformationRoutines.ProcessesTasksandModules>
Summary:
  Returns the name of the shell process.
Description:

  GetShellProcessName returns the name of the shell process as defined in the registry.
  If the registry does not explicitly specify a shell process "explorer.exe" is returned
  as a default.
Result:

  The name of the shell process executable.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Marcel van Brakel
  Delphi Versions: 4,5,6
  Free Pascal Compiler Versions: 1.x
--------------------------------------------------------------------------------
@@GetShellProcessHandle
<GROUP SystemInformationRoutines.ProcessesTasksandModules>
Summary:
  Returns a handle to the shell process.
Description:

  GetShellProcessHandle returns a handle to the shell process, if any. The handle is
  opened with full access (PROCESS_ALL_ACCESS) and must be closed by the caller using
  the CloseHandle Windows API function.
Result:

  If the function succeeds it returns a handle to the shell process. Upon failure the
  function raises an exception (EOSError).
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Marcel van Brakel
  Delphi Versions: 4,5,6
  Free Pascal Compiler Versions: 1.x
--------------------------------------------------------------------------------
@@GetPidFromProcessName
<GROUP SystemInformationRoutines.ProcessesTasksandModules>
Summary:
  Returns the process identifier (PID) for the process identified by processname.
Description:

  GetPidFromProcessName returns the process identifier (PID) of the process
  identifier by ProcessName. The specified ProcessName must be the full name of
  the process, that is including the extension, as it appears in task manager for
  example.
Parameters:
  ProcessName - Name of the process, including extension, of the process for which to retrieve the process identifier.
Result:

  If the function succeeds it returns the process identifier of the specified
  process. If the function fails it returns INVALID_HANDLE_VALUE. Most common
  reason of failure is that the specified process doesn't exist (isn't running) or
  you didn't specify the full name of the process.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Marcel van Brakel
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
--------------------------------------------------------------------------------
@@RoundToAllocGranularityPtr
Summary:
  Rounds an address to an allocation boundary.
Description:

  Some Win32 API routines that take pointer parameters require that the specified
  address is a multiple of the allocation granularity. On current Intel platforms
   (x86) this is 64K. RoundToAllocGranularityPtr rounds the given 32 bit address
  to a system defined allocation granularity boundary. You can have the function
  round upwards or downwards by specifying True or False for the Up parameter
  respectively. This function also exists for 64 bit pointers.
Parameters:
  Value - The address to adjust.
  Up - If True the function rounds the address up to the next multiple of the allocation granularity, if False it rounds the address down to the previous multiple of the allocation granularity.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Wim De Cleen
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
--------------------------------------------------------------------------------
@@ProcessorCount
Summary:
  Number of processors.
Description:

  ProcessorCount contains the number of processors in the system. Initialized during
  unit initialization.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Marcel van Brakel
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@AllocGranularity
Summary:
  Systems memory allocation granularity.
Description:

  AllocGranularity contains the systems virtual memory allocation granularity.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Marcel van Brakel
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetCurrentFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the current directory.
Description:

  GetCurrentFolder returns the current directory (folder) for the calling process.
Result:

  The current directory for the calling process or an empty string on failure.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Robert Marquardt
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@DelEnvironmentVar
<GROUP SystemInformationRoutines.Environment>
Summary:
  Deletes a environment variable.
Description:

  DelEnvironmentVar deletes the environment variable specified by Name in the calling
  process's environment block.
Parameters:
  Name - Name of the environment variable to delete.
Result:

  If the function succeeds it returns True, otherwise it returns False.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Marcel van Brakel
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@ExpandEnvironmentVar
<GROUP SystemInformationRoutines.Environment>
Summary:
  Expands the environment variable.
Description:

  ExpandEnvironmentVar expands an environment variable. If the variable contains
  environment variable strings, for example %systemroot%, then these are replaced
  by the system defined values for that specific variable. If the variable does
  not exist it is left intact.
Parameters:
  Value - On input the string which may contain environment variable strings that you want to expand. On exit a copy of the input with environment variables replaced by their system defined value, if they exist.
Result:

  If the function succeeds it returns True, otherwise it returns False. In the latter
  case the content of Value is undefined.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Marcel van Brakel
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetEnvironmentVar
<GROUP SystemInformationRoutines.Environment>
Summary:
  Retrieves the value of an environment variable.
Description:

  GetEnvironmentVar retrieves the value of the specified environment variable from
  the process environment block. Depending on the value of the Expand parameter,
  the returned string may contain environment variable strings such as %systemroot%.
  To expand the string, thereby replacing the strings with their system defined
  value, use ExpandEnvironmentVar.
Parameters:
  Name - Name of the environment variable to retrieve.
  Value - Receives the value of the specified environment variable, if it exists.
  Expand - If True the returned value has the embedded environment strings expanded. If False these string are left unexpanded.
Result:

  If the function succeeds it returns True, otherwise it returns False.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Marcel van Brakel
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetEnvironmentVars
<GROUP SystemInformationRoutines.Environment>
Summary:
  Retrieves a list of all environment variables.
Description:

  GetEnvironmentVars is similar to GetEnvironmentVar except that it
  retrieves a list of environment variables in the process environment block and
  their values. If Expand is set to True any embedded environment strings, such
  as %systemroot% are replaced by their system defined value before exit. 
  Use of this function is not recommended by Microsoft. Instead you should
  use GetEnvironmentVar to query the value of specific environment
  variables.
Parameters:
  Vars - Receives the list of environment variables and their values.
  Expand - If True the individual items have the embedded environment strings expanded to their system defined value before exit. If False this expansion is not done.
Result:

  If the function succeeds in retrieving the environment strings it returns True,
  on failure it returns False. Note that a result of True does not necessarily mean
  that environment string expansion was successful for all variables.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Marcel van Brakel
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.5 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@SetEnvironmentVar
<GROUP SystemInformationRoutines.Environment>
Summary:
  Sets the value of an environment variable.
Description:

  SetEnvironmentVar sets the value of the specified environment variable to the
  supplied value. If the variable does not exists it is created first.
Parameters:
  Name - Name of the environment variable to set.
  Value - New value for the specified environment variable.
Result:

  If the function succeeds it returns True, otherwise it returns False.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Marcel van Brakel
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@TWindowsVersion
<GROUP SystemInformationRoutines.VersionInformation>
Summary:
  Enumeration of Windows versions. Used as function result by GetWindowsVersion
Description:
  Enumeration of Windows versions. Used as function result by GetWindowsVersion
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Marcel van Brakel
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
@@TWindowsVersion.wvUnknown
  Unknown Windows version. This can happen when a new Windows version is released after JCL or if you are running a Windows version with a different build number then expected. For example a beta version.
@@TWindowsVersion.wvWin95
  Windows 95
@@TWindowsVersion.wvWin95OSR2
  Windows 95 OSR 2 Windows 98
@@TWindowsVersion.wvWin98SE
  Windows 98 Second Edition
@@TWindowsVersion.wvWinME
  Windows Millenium
@@TWindowsVersion.wvWin2000
  Windows 2000
@@TWindowsVersion.wvWinNT3
  Windows NT 3.x
@@TWindowsVersion.wvWinNT4
  Windows NT 4.0
--------------------------------------------------------------------------------
@@GetWindowsVersion
<GROUP SystemInformationRoutines.VersionInformation>
Summary:
  Returns the Windows version.
Description:

  GetWindowsVersion returns the Windows version as an enumerated type.
Result:

  The Windows version, see TWindowsVersion for the possible values.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Marcel van Brakel
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
--------------------------------------------------------------------------------
@@TestFDIVInstruction
<GROUP SystemInformationRoutines.Hardware>
Summary:
  Tests the processor for the flawed FDIV instruction.
Description:

  TestFDIVInstruction tests the processor for the correctness of the FDIV instruction.
  Older pentium processors had a bug in this instruction that caused incorrect
  results under specific circumstances. Modern processors do not exhibit this bug.
Result:

  If the FDIV instruction is OK the function returns True, if it is flawed the
  function returns False.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Bryan Coutch
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
--------------------------------------------------------------------------------
@@CPUID
<GROUP SystemInformationRoutines.Hardware>
Summary:
  Returns information about the processor.
Description:

  CPUID is used by GetCpuInfo for obtaining information about the processor.
  You can call this function directly but it is recommend you use GetCpuInfo
  instead. If you do call CPUID then keep in mind that the ISFDIVOK, FrequencyInfo
  and MMX fields of the returned TCpuInfo record contain undefined data.
Result:

  CPUID returns information about the processor through a TCpuInfo record.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Bryan Coutch
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetCpuSpeed
<GROUP SystemInformationRoutines.Hardware>
Summary:
  Returns information about the processor speed.
Description:

  GetCpuSpeed calculates the speed (frequency) of a processor. It returns the
  information in a TFreqInfo record which includes the actual calculated
  speed as well as a normalized speed.
Parameters:
  CpuSpeed - Receives the CPU speed. See the description of TFreqInfo for more information about the members of this record.
Result:

  If the function succeeds it returns True, otherwise it returns False. In the latter
  case the content of the CpuSpeed parameter is undefined.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Bryan Coutch
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@RoundFrequency
<GROUP SystemInformationRoutines.Hardware>
Summary:
  Normalizes a frequency.
Description:

  RoundFrequency rounds a frequency as obtained from GetCpuSpeed to a
  normalized frequency. For example, if GetCpuSpeed returns a calculated frequency
  of 266.13 MHz then RoundFrequency will return the normalized 266 MHz.
Parameters:
  Frequency - The frequency to round (normalize) in MHz.
Result:

  The normalized frequency in MHz.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Bryan Coutch
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
--------------------------------------------------------------------------------
@@GetMacAddresses
<GROUP SystemInformationRoutines.Hardware>
Summary:
  Retrieves the MAC addresses for a computer.
Description:

  GetMacAddresses returns a list of all MAC addresses for the specified computer.
  The computer can be the local computer or a computer on the network.
Parameters:
  Machine - Netbios name of the computer who's MAC addresses you want. This can be the 'standard' computer name of a computer on the network or a '*' for the local computer (you can also use the local computer name or an empty string).
  Addresses - On output a list of all MAC address found.
Result:

  The function returns the number of MAC addresses that are available for the
  specified computer. The Addresses list may contain fewer addresses though. The
  function attempts to get all the addresses but might fail for some of them, in
  which case it continues to retrieve the remaining addresses. In case of complete
  failure the function returns -1 and the Addresses list will be empty.
Notes:

  This function is an adapted conversion from the Platform SDK example described in knowledge base article Q118623.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Marcel van Brakel
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@ReadTimeStampCounter
<GROUP SystemInformationRoutines.Hardware>
Summary:
  Reads the time stamp counter.
Description:

  The ReadTimeStampCounter function reads and returns the current value of the time stamp counter.
  The time-stamp counter counts CPU clocks from the time the processor is reset,
  where it is initialized to an unknown count. This is a 64 bit count and therefore
  it can accumulate counts for almost 2500 years (based on a 200MHz processor)
  before a rollover occurs. You may want to consider inlining this instruction as
  opposed to calling this function. If you do, the resulting 64 bit integer
  containing the count is returned in the combination EDX:EAX.
Result:

  The current value of the time stamp counter.
Notes:

  This instruction is only available on Pentium (and higher) processors.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Azret Botash
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
--------------------------------------------------------------------------------
@@GetVolumeSerialNumber
<GROUP SystemInformationRoutines.Identification>
Summary:
  Returns the volume serial number for the specified drive.
Description:

  GetVolumeSerialNumber returns the serial number for the specified volume. You
  may specify a volume (e.g. 'c:\') or a UNC name.
Parameters:
  Drive - The volume for which to retrieve the serial number. You must specify the root-directory of a drive (e.g. 'c:\') or a full UNC name in which case you must follow it with an additional backslash.
Result:

  If the function succeeds it returns the serial number of the specified volume.
  If the function fails it returns an empty string.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: John C Molyneux
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetVolumeFileSystem
<GROUP SystemInformationRoutines.Identification>
Summary:
  Returns the name of the filesystem of the specified volume.
Description:

  GetVolumeFileSystem returns the name of the filesystem of the specified volume.
  This can be a string such as 'FAT' or 'NTFS'. You may specify a volume (e.g. 'c:\')
  or a UNC name.
Parameters:
  Drive - The volume for which to filesystem name. You must specify the root-directory of a drive (e.g. 'c:\') or a full UNC name in which case you must follow it with an additional backslash.
Result:

  If the function succeeds it returns the name of the filesystem of the specified
  volume. If the function fails it returns an empty string.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: John C Molyneux
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetVolumeName
<GROUP SystemInformationRoutines.Identification>
Summary:
  Returns the name for the specified drive.
Description:

  GetVolumeName returns the name of the specified volume. You
  may specify a volume (e.g. 'c:\') or a UNC name.
Parameters:
  Drive - The volume for which to retrieve the name. You must specify the root-directory of a drive (e.g. 'c:\') or a full UNC name in which case you must follow it with an additional backslash.
Result:

  If the function succeeds it returns the name of the specified volume.
  If the function fails it returns an empty string.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: John C Molyneux
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetIPAddress
<GROUP SystemInformationRoutines.Identification>
Summary:
  Returns the IP address of a host.
Description:

  GetIPAddress attempts to resolve a hostname to an IP address. If the function
  succeeds it returns the IP address in dotted decimal notation. You can call
  GetIPAddress with GetLocalComputerName or an empty string as the HostName
  parameter to get the IP address of the local computer. This function assumes
  IPv4 addresses and only returns one IP address, even if the specified host has
  more then one.
Parameters:
  HostName - The name of the host computer who's IP address you want. If an empty string is passed the function returns the IP address of the local computer.
Result:

  If the function succeeds it returns the IP address of the specified host in the
  dotted decimal notation. If the function fails it returns an empty string.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: John C Molyneux
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
  Requirements: Requires Windows sockets 1.1 or higher
--------------------------------------------------------------------------------
@@TIntelSpecific
<GROUP SystemInformationRoutines.Hardware>
Summary:
  Describes the cache of an Intel processor.
Description:
  Describes the cache of an Intel processor.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Bryan Coutch
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
@@TIntelSpecific.L2Cache
  Size of the level 2 cache in Kb.
@@TIntelSpecific.CacheDescriptors
  Detailed information about the data and instruction caches. You can map these entries to a descriptive string by using the IntelCacheDescription global variable. The entry in that array for which the D member matches the value in the CacheDescriptors array is the entry who's I member contains the descriptive string. You can use the IntelCacheDescription function to get that string.
--------------------------------------------------------------------------------
@@TCyrixSpecific
<GROUP SystemInformationRoutines.Hardware>
Summary:
  Describes the cache of a Cyrix processor.
Description:
  Describes the cache of a Cyrix processor.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Bryan Coutch
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
@@TCyrixSpecific.L1CacheInfo
  Describes the level 1 cache. If an entry contains the value $80 it denotes a '16KB L1 Cache, 4-way set associative, 16 byte line size' cache.
@@TCyrixSpecific.TLBInfo
  Describes the TLB. If an entry contains the value $70 it denotes a 'TLB, 4Kb pages, 4-way set associative, 32 entries' TLB.
--------------------------------------------------------------------------------
@@TAMDSpecific
<GROUP SystemInformationRoutines.Hardware>
Summary:
  Describes the cache of an AMD processor.
Description:
  Describes the cache of an AMD processor.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Bryan Coutch
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
@@TAMDSpecific.DataTLB
  Describes the Data TLB. The entries have the following meaning:    * DataTLB[0] Contains the number of TLB entries while  * DataTLB[1] Contains the associativity ($FF denotes fully associative TLB)  
@@TAMDSpecific.InstructionTLB
  Describes the instruction TLB. The entries have the following meaning:    * InstructionTLB[0] Contains the number of TLB entries  * InstructionTLB[1] Contains the associativity ($FF denotes a fully associative TLB)  
@@TAMDSpecific.L1DataCache
  Describes the level 1 data cache. The entries have the following meaning:    * L1DataCache[0] Line size in bytes  * L1DataCache[1] Lines per tag  * L1DataCache[2] Associativity ($FF is fully associative)  * L1DataCache[3] Size in Kb  
@@TAMDSpecific.L1ICache
  Describes the level 1 instruction cache. The entries have the following meaning:    * L1ICache[0] Line size in bytes  * L1ICache[1] Lines per tag  * L1ICache[2] Associativity ($FF is fully associative)  * L1ICache[3] Size in Kb  
--------------------------------------------------------------------------------
@@TCacheInfo
<GROUP SystemInformationRoutines.Hardware>
Summary:
  The IntelCacheDescription global variable uses this type to provide a mapping from a cache descriptor to a cache entry description.
Description:
  The IntelCacheDescription global variable uses this type to provide a mapping from a cache descriptor to a cache entry description.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Bryan Coutch
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
@@TCacheInfo.D
  Descriptor used to match a cache descriptor to it's representative string.
@@TCacheInfo.I
  Description of cache.
--------------------------------------------------------------------------------
@@TFreqInfo
<GROUP SystemInformationRoutines.Hardware>
Summary:
  Record used as a field in the TCpuInfo record which contains frequency information about the CPU. This information is calculated when you call GetCpuInfo.
Description:
  Record used as a field in the TCpuInfo record which contains frequency information about the CPU. This information is calculated when you call GetCpuInfo.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Bryan Coutch
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
@@TFreqInfo.RawFreq
  The raw frequency of the CPU in MHz.
@@TFreqInfo.NormFreq
  The normalized frequency of the CPU in MHz.
@@TFreqInfo.InCycles
  The elapsed, internal clock cycles during the test.
@@TFreqInfo.ExTicks
  The time, in microseconds, that elapsed during the test.
--------------------------------------------------------------------------------
@@TCpuInfo
<GROUP SystemInformationRoutines.Hardware>
Summary:
  The TCpuInfo record is used by GetCpuInfo and returns the requested processor information.
Description:
  The TCpuInfo record is used by GetCpuInfo and returns the requested processor information.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Bryan Coutch
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
@@TCpuInfo.HasInstruction
  True if the processor supports CPU identification instructions. If False the MMX, Features and FrequencyInfo fields do not contain valid data.
@@TCpuInfo.MMX
  True if the processor supports the MMX extension instructions.
@@TCpuInfo.IsFDIVOK
  True if the FDIV instruction is OK, False if it's flawed.
@@TCpuInfo.HasCacheInfo
  True if the processor specific subrecords contain valid cache information data. If False the IntelSpecific, CyrixSpecific and AMDSpecific subrecords do not contain valid data.
@@TCpuInfo.HasExtendedInfo
  Denotes whether or not the AMD or Cyrix processors have the extended CPUID instruction. This affects the possible flags in the Features field. If False the Features member does not contain any of the extended Cyrix and AMD flags (the ones starting with an 'E').
@@TCpuInfo.CpuType
  Denotes the CPU vendor, can be one of the following values: CPU_TYPE_INTEL, CPU_TYPE_CYRIX, CPU_TYPE_AMD.
@@TCpuInfo.PType
  Denotes the CPU: Type 0 = Normal, 1 = Overdrive
@@TCpuInfo.Family
  Processor family. For example, for Intel processors a value of 4 denotes a 486, 5 a Pentium and 6 a Pentium Pro. The family and model members are used together to form a descriptive string in the CpuName member.
@@TCpuInfo.Model
  The specific model within a processor family. For example, for an Intel processor with family 6 (Pentium Pro) a value of 1 denotes a Pentium Pro while a 3 denotes a Pentium II. The family and model members are used together to form a descriptive string in the CpuName member.
@@TCpuInfo.Stepping
  TODO
@@TCpuInfo.Features
  Contains a set of flags detailing the features of the processor. The possible flags are processor specific. See Flags for more information.
@@TCpuInfo.FrequencyInfo
  Contains processor freqeuncy information.
@@TCpuInfo.VendorIDString
  Contains a string describing the processor's vendor.
@@TCpuInfo.Manufacturer
  Contains a string describing the processor's manufacturer.
@@TCpuInfo.CpuName
  Contains a descriptive string for the processor (for example "Pentium II Xeon").
@@TCpuInfo.IntelSpecific
  Contains Intel processor specific information. Only valid if HasCacheInfo is True.
@@TCpuInfo.CyrixSpecific
  Contains Cyrix processor specific information. Only valid if HasCacheInfo is True.
@@TCpuInfo.AMDSpecific
  Contains AMD processor specific information. Only valid if HasCacheInfo is True.
--------------------------------------------------------------------------------
@@GetCpuInfo
<GROUP SystemInformationRoutines.Hardware>
Summary:
  Returns information about the CPU.
Description:

  GetCpuInfo returns extensive information about the CPU (Central Processing Unit).
  It returns 'generic' information such as type, speed and manufacturer information
  as well as brand specific information for Intel, AMD and Cyrix processors. This
  function includes support for the Intel 486 to Pentium II, AMD AM486 to K6-3 and
  Cyrix Media GX to 6x86MX.
Parameters:
  CpuInfo - Record to receive processor information.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Bryan Coutch
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetIntelCacheDescription
<GROUP SystemInformationRoutines.Hardware>
Summary:
  Returns a descriptive string for an Intel cache descriptor.
Description:

  GetIntelCacheDescription returns a descriptive string for an Intel cache descriptor.
  This is something like: 'Instruction TLB, 4Kb pages, 4-way set associative, 32 entries'.
Parameters:
  D - The descriptor for which you want a descriptive string. This is usually one of the entries in the TIntelSpecific.CacheDescriptors array.
Result:

  The descriptive string for the specified descriptor. If a description isn't
  available the function returns an empty string.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Marcel van Brakel
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetCommonFilesFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the Windows Common Files directory.
Description:

  GetCommonFilesFolder returns the Windows Common Files folder as read from the
  registry. On a default installation of Windows 2000 this is a string such as
  c:\Program Files\Common Files.
Result:

  The Windows Common Files folder. If the function fails it returns an empty string.
Notes:

  You can use the SHGetFolderPath API function to get many more common directories.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Carl Clark
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 4 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetLocalComputerName
<GROUP SystemInformationRoutines.Identification>
Summary:
  Returns the name of the local computer.
Description:

  The GetLocalComputerName function retrieves the NetBIOS name of the local computer.
  This name is established at system startup, when the system reads it from the
  registry. If the local computer is a node in a cluster, GetLocalComputerName returns
  the name of the cluster.
Result:

  The local computer name or an empty string on failure.
Notes:

  If you're running Windows 2000 you can use the GetComputerNameEx function for more detailed control over exactly which name you want.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Nick Hodges
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetLocalUserName
<GROUP SystemInformationRoutines.Identification>
Summary:
  Returns the name of the current user.
Description:

  Returns the name of the user associated with the current thread. That is the
  user currently logged on to the system. If the current thread is impersonating
  a client, the function returns the name of that client.
Result:

  The local user name or an empty string on failure.
Notes:

  If you're running Windows 2000 you can use the GetUserNameEx function to control the format of the returned name.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Nick Hodges
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetProgramFilesFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the Windows Program Files directory.
Description:

  GetProgramFilesFolder returns the Windows Program Files folder as read from the
  registry. On a default installation of Windows 2000 this is a string such as
  c:\Program Files.
Result:

  The Windows Program Files folder. If the function fails it returns an empty string.
Notes:

  You can use the SHGetFolderPath API function to get many more common directories.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Carl Clark
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 4 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetRegisteredCompany
<GROUP SystemInformationRoutines.Identification>
Summary:
  Returns the registered company.
Description:

  Returns the registered company string for the local computer as read from the
  registry.
Result:

  The registered company string or an empty string on failure.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Nick Hodges
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 4 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetRegisteredOwner
<GROUP SystemInformationRoutines.Identification>
Summary:
  Returns the registered owner.
Description:

  Returns the registered owner string for the local computer as read from the registry.
Result:

  The registered owner string or an empty string on failure.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Nick Hodges
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 4 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetBIOSDate
<GROUP SystemInformationRoutines.Identification>
Summary:
  Returns the BIOS date.
Description:

  Returns the date the BIOS release date.
Result:

  The BIOS release date, if successful. The system base date (12/30/1899), if
  there has been a problem.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.51 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetBIOSName
<GROUP SystemInformationRoutines.Identification>
Summary:
  Returns the BIOS name.
Description:

  Returns the name of the BIOS.
Result:

  The BIOS name, if successful. An empty string otherwise.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: James Azarja
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetBIOSCopyright
<GROUP SystemInformationRoutines.Identification>
Summary:
  Returns the BIOS copyright string.
Description:

  Returns the BIOS copyright string.
Result:

  The BIOS copyright, if successful. An  empty string otherwise.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: James Azarja
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetBIOSExtendedInfo
<GROUP SystemInformationRoutines.Identification>
Summary:
  Returns extended information on the BIOS.
Description:

  Returns extended information on the BIOS.
Result:

  The BIOS extended information, if successful. An  empty string otherwise.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: James Azarja
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetWindowsFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the Windows folder.
Description:

  The GetWindowsFolder function retrieves the path of the Windows directory. The
  Windows directory contains such files as Win32-based applications, initialization
  files, and help files. On a default installation of Windows 2000 this is c:\winnt.
Result:

  The Windows directory or an empty string on failure.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Petr Vones
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetWindowsSystemFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the Windows system directory.
Description:

  The GetWindowsSystemFolder function retrieves the path of the system directory. The
  system directory contains such files as dynamic-link libraries, drivers, and font
  files. On a default installation of Windows 2000 this is c:\winnt\system32.
Result:

  The Windows system directory or an empty string on failure.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Petr Vones
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetWindowsTempFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the Windows temp folder.
Description:

  The GetWindowsTempFolder function retrieves the path of the directory designated
  for temporary files. Normally this is the folder specified by the TMP or TEMP
  environment variable. If TMP and TEMP do not exist then for Windows 95/98 the
  result is the current directory and for Windows NT/2000 the result is the Windows
  directory.
Result:

  The Windows folder designated for temporary files.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Nick Hodges
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@IsWin95
<GROUP SystemInformationRoutines.VersionInformation>
Summary:
  Returns whether the system is running Windows 95
Description:

  IsWin95 returns whether or not the system is running Windows 95.
Result:

  If the system is running Windows 95 the result is True otherwise the result is False.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Nick Hodges
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@IsWin95OSR2
<GROUP SystemInformationRoutines.VersionInformation>
Summary:
  Returns whether the system is running Windows 95 OSR 2
Description:

  IsWin95OSR2 returns whether or not the system is running Windows 95 OSR 2.
Result:

  If the system is running Windows 95 OSR 2 the result is True otherwise the result is False.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Nick Hodges
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@IsWin98
<GROUP SystemInformationRoutines.VersionInformation>
Summary:
  Returns whether the system is running Windows 98
Description:

  IsWin98 returns whether or not the system is running Windows 98.
Result:

  If the system is running Windows 98 the result is True otherwise the result is False.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Nick Hodges
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@IsWin98SE
<GROUP SystemInformationRoutines.VersionInformation>
Summary:
  Returns whether the system is running Windows 98 SE
Description:

  IsWin98SE returns whether or not the system is running Windows 98 Second Edition.
Result:

  If the system is running Windows 98 SE the result is True otherwise the result is False.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Nick Hodges
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@IsWinME
<GROUP SystemInformationRoutines.VersionInformation>
Summary:
  Returns whether the system is running Windows Millenium
Description:

  IsWin98SE returns whether or not the system is running Windows Millenium.
Result:

  If the system is running Windows Millenium the result is True otherwise the result is False.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Nick Hodges
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@IsWinNT
<GROUP SystemInformationRoutines.VersionInformation>
Summary:
  Returns whether the system is running Windows NT
Description:

  IsWinNT returns whether or not the system is running Windows NT.
Result:

  If the system is running Windows NT the result is True otherwise the result is False.
  You can use the IsWinNT3, IsWinNT4 and IsWin2K
  to further distinguish between the different NT versions.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Nick Hodges
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@IsWinNT3
<GROUP SystemInformationRoutines.VersionInformation>
Summary:
  Returns whether the system is running Windows NT 3
Description:

  IsWinNT3 returns whether or not the system is running Windows NT 3.
Result:

  If the system is running Windows NT 3 the result is True otherwise the result is False.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Nick Hodges
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@IsWinNT4
<GROUP SystemInformationRoutines.VersionInformation>
Summary:
  Returns whether the system is running Windows NT 4.
Description:

  IsWinNT4 returns whether or not the system is running Windows NT 4.
Result:

  If the system is running Windows NT 4 the result is True otherwise the result is False.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Nick Hodges
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@IsWin2K
<GROUP SystemInformationRoutines.VersionInformation>
Summary:
  Returns whether the system is running Windows 2000
Description:

  IsWin2K returns whether or not the system is running Windows 2000.
Result:

  If the system is running Windows 2000 the result is True otherwise the result is False.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Marcel van Brakel
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@NtProductType
<GROUP SystemInformationRoutines.VersionInformation>
Summary:
  Returns the Windows NT product type.
Description:

  NtProductType returns which edition of Windows NT is running on the system.
Result:

  The edition of Windows NT. This is one of the values in the TNtProductType
  enumeration which is defined as:
  TNtProductType = (ptUnknown, ptWorkStation, ptServer, ptAdvancedServer);
   
   * ptUnknown Edition could not be determined. Most likely the system is not running NT
   * ptWorkStation The system is running Windows NT workstation or Windows 2000 professional.
   * ptServer The system is running Windows NT/2000Windows 2000 Server
   * ptAdvancedServer The system is running Windows NT/2000 Server as a (primary or backup) domain controller.
   
Notes:

  On platforms other then Windows NT/2000 this function always returns ptUnknown.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Marcel van Brakel
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@CreateEnvironmentBlock
<GROUP SystemInformationRoutines.Environment>
Summary:
  Prepares a new environment block for CreateProcAsUserEx
Description:

  CreateEnvironmentBlock prepares a process environment block. It is used
  by CreateProcAsUserEx,
  which launches a new process with a new environment block. By setting the appropriate
  options, you can determine whether the function will include the current environment
  block within the new environment block. Also, you can add a customized set of environment
  variables by supplying the AdditionalVars parameter.
Parameters:
  Options - Determines whether the global and / or user related environment variables will be included in the result.
  AdditionalVars - This list contains additional strings for the new environment block. The entries in this list must be name / value pairs (e.g. 'name=value'). You may pass a nil value in this parameter, which makes the function behave exactly as CreateProcAsUser.
Result:

  As the result, you will receive a PChar containing a list of environment variables. This
  PChar can directly be used with functions like CreateProcAsUserEx.
Notes:

  The caller is responsible to release the returned PChar when it is no longer needed.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Not tested.
--------------------------------------------------------------------------------
@@TEnvironmentOptions
<GROUP SystemInformationRoutines.Environment>
Summary:
  This set of options for CreateEnvironmentBlock will determine which environment variables will be copied to the new environemt block.
Description:
  This set of options for CreateEnvironmentBlock will determine which environment variables will be copied to the new environemt block.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
@@TEnvironmentOptions.eoLocalMachine
  Copy the environment block defined globally for the local machine.
@@TEnvironmentOptions.eoCurrentUser
  Copy the environment of the user that is running the process.
@@TEnvironmentOptions.eoAdditional
  Copy additional name / value pairs to the new environment block. These additional pairs must be passed in the AdditionalVars parameter of the CreateEnvironmentBlock function.
--------------------------------------------------------------------------------
@@GetUserDomainName
<GROUP SystemInformationRoutines.Identification>
Summary:
  Returns the name of the domain where a user account resides.
Description:

  GetUserDomainName returns the name of the domain where a user account resides.
Parameters:
  CurUser - The name of the user account to look up.
Result:

  As the result, you will receive the name of the domain the user is defined in,
  or an empty string if the function fails.
Notes:

  The function tries to find the user account on the local system first. Next, the primary domain is checked. If the name is not found there, trusted domains are checked.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Not tested.
--------------------------------------------------------------------------------
@@GetDomainName
<GROUP SystemInformationRoutines.Identification>
Summary:
  Returns the name of the domain where the current user account resides.
Description:

  GetDomainName returns the name of the domain where the user account associated
  with the calling thread resides. In client application this will usually be the
  interactively logged on user, but in server applications this could be any user
  that is currently impersonated.
Result:

  The name of the domain where the user account resides, or an empty string if
  the function fails.
Notes:

  The function determines the name of the domain by checking which domain the currently logged in user is belonging to.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later.
  Windows 95/98: Not tested.
--------------------------------------------------------------------------------
@@GetDesktopFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the virtual folder representing the Windows desktop.
Description:

  GetDesktopFolder returns the name of the virtual folder (directory) representing
  the Windows desktop. On a standard Windows NT 4.0 installation, this is equivalent
  to "C:\WINNT\Profiles\%Username%\Desktop".
Result:

  A string containing the local path to the desktop directory.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetProgramsFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the file system directory containing the current user's program groups.
Description:

  GetProgramsFolder returns the name of the file system directory containing the user's
  program groups (which are in fact file system directories themselves) and program
  shortcuts (which are special files). On a standard Windows NT 4.0 installation,
  this is equivalent to "C:\WINNT\Profiles\%Username%\Start Menu\Program Files".
Result:

  A string containing the local path to the programs directory.
Notes:

  Applications that need to add program groups and program shortcuts should place them into the directory returned by this function.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetPersonalFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the directory that serves as a common repository for documents.
Description:

  GetPersonalFolder returns the name of the directory that serves as a common
  repository for documents. On a standard Windows NT 4.0 installation,
  this is equivalent to "C:\WINNT\Profiles\%Username%freter\Personal Files".
Result:

  A string containing the local path to the current user's personal files folder.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetFavoritesFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the directory that serves as a common repository for the user's favorite items.
Description:

  GetFavoritesFolder returns the name of the directory that serves as a common
  repository for the user's favorite items. On a standard Windows NT 4.0 installation,
  this is equivalent to "C:\WINNT\Profiles\%Username%\Favorites".
Result:

  A string containing the local path to the current user's favorite files folder.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetStartupFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the directory that corresponds to the user's Startup program group.
Description:

  GetStartupFolder returns the name of the directory that corresponds to the user's
  Startup program group. The system starts these programs whenever any user logs
  onto Windows NT or starts Windows 95. On a standard Windows NT 4.0 installation,
  this directory is equivalent to "C:\WINNT\Profiles\%Username%\Start Menu\Program Files\Startup".
Result:

  A string containing the local path to the current user's startup files folder.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetRecentFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the file system directory that contains the user's most recently used documents.
Description:

  GetRecentFolder returns the name of the file system directory that contains the
  user's most recently used documents. On a standard Windows NT 4.0 installation,
  this directory is equivalent to "C:\WINNT\Profiles\%Username%\Recent".
Result:

  A string containing the local path to the current user's recently used files folder.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetSendToFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the file system directory that contains Send To menu items.
Description:

  GetSendToFolder returns the name of the file system directory that contains Send
  To menu items. On a standard Windows NT 4.0 installation, this directory is
  equivalent to "C:\WINNT\Profiles\%Username%\SendTo".
Result:

  A string containing the local path to the current user's Send To files folder.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetStartmenuFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the file system directory containing Start menu items.
Description:

  GetStartmenuFolder returns the name of the file system directory containing Start
  menu items. On a standard Windows NT 4.0 installation, this directory is equivalent
  to "C:\WINNT\Profiles\%Username%\SendTo".
Result:

  A string containing the local path to the current user's Start menu folder.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetDesktopDirectoryFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the file system directory used to physically store file objects on the desktop.
Description:

  GetDesktopDirectoryFolder returns the name of the file system directory used to
  physically store file objects on the desktop (not to be confused with the desktop
  folder itself). On a standard Windows NT 4.0 installation, this directory is
  equivalent to "C:\WINNT\Profiles\%Username%\Desktop".
Result:

  A string containing the local path to the current user's desktop folder.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetNethoodFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the file system directory containing objects that appear in the network neighborhood.
Description:

  GetNetHoodFolder returns the name of the file system directory containing objects
  that appear in the network neighborhood. On a standard Windows NT 4.0 installation,
  this directory is equivalent to "C:\WINNT\Profiles\%Username%\Nethood".
Result:

  A string containing the local path to the current user's nethood folder.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetFontsFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the file system directory containing fonts.
Description:

  GetFontsFolder returns the name of the file system directory containing fonts. On
  a standard Windows NT 4.0 installation, this directory is equivalent
  to "C:\WINNT\Fonts".
Result:

  A string containing the local path to the system's fonts folder.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetCommonStartmenuFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the file system directory that contains the programs and folders that appear on the Start menu for all users.
Description:

  GetCommonStartmenuFolder returns the name of the file system directory that
  contains the programs and folders that appear on the Start menu for all users. On
  a standard Windows NT 4.0 installation, this directory is equivalent
  to "C:\WINNT\Profiles\All Users\Start Menu".
Result:

  A string containing the local path to the system's Start menu folder.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetCommonProgramsFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the file system directory that contains the directories for the common program groups that appear on the Start menu for all users.
Description:

  Returns the name of the file system directory that contains the directories for
  the common program groups that appear on the Start menu for all users. On
  a standard Windows NT 4.0 installation, this directory is equivalent
  to "C:\WINNT\Profiles\All Users\Start Menu\Program Files".
Result:

  A string containing the local path to the system's programs folder.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetCommonStartupFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the file system directory that contains the programs that appear in the Startup folder for all users.
Description:

  GetCommonStartupFolder returns the name of the file system directory that contains
  the programs that appear in the Startup folder for all users. On a standard Windows
  NT 4.0 installation, this directory is equivalent to
  "C:\WINNT\Profiles\All Users\Start Menu\Program File\Startup".
Result:

  A string containing the local path to the system's Startup folder.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetCommonDesktopdirectoryFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the file system directory that contains files and folders that appear on the desktop for all users.
Description:

  GetCommonDesktopdirectoryFolder returns the name of the file system directory that
  contains files and folders that appear on the desktop for all users. On a standard
  Windows NT 4.0 installation, this directory is equivalent to
  "C:\WINNT\Profiles\All Users\Desktop".
Result:

  A string containing the local path to the system's desktop folder.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetAppdataFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the file system directory that serves as a common repository for application-specific data.
Description:

  GetAppdataFolder Returns the name of the file system directory that serves as a
  common repository for application-specific data. On a standard Windows NT 4.0
  installation, this directory is equivalent to "C:\WINNT\Profiles\%Username%\Application Data".
Result:

  A string containing the local path to the current user's application data folder.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetPrinthoodFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the file system directory that serves as a common repository for printer links.
Description:

  GetPrinthoodFolder Returns the name of the file system directory that serves as a common repository
  for printer links. On a standard Windows NT 4.0 installation, this directory is
  equivalent to "C:\WINNT\Profiles\%Username%\Printhood".
Result:

  A string containing the local path to the current user's printhood folder.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetCommonFavoritesFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the file system directory that serves as a common repository for all users' favorite items.
Description:

  GetCommonFavoritesFolder returns the name of the file system directory that serves
  as a common repository for all users' favorite items.
Result:

  A string containing the local path to the systems's favorites files folder.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetTemplatesFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the file system directory that serves as a common repository for document templates.
Description:

  GetTemplatesFolder returns the name of the file system directory that serves as
  a common repository for document templates.
Result:

  A string containing the local path to the current user's templates folder.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetInternetCacheFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the file system directory that serves as a common repository for temporary Internet files.
Description:

  GetInternetCacheFolder returns the name of the file system directory that serves
  as a common repository for temporary Internet files.
Result:

  A string containing the local path to the current user's internet cache folder.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetCookiesFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the file system directory that serves as a common repository for Internet cookies.
Description:

  GetCookiesFolder returns the name of the file system directory that serves as a
  common repository for Internet cookies.
Result:

  A string containing the local path to the current user's internet cookies folder.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetHistoryFolder
<GROUP SystemInformationRoutines.CommonFolders>
Summary:
  Returns the name of the file system directory that serves as a common repository for Internet history items.
Description:

  GetHistoryFolder returns the name of the file system directory that serves as a
  common repository for Internet history items.
Result:

  A string containing the local path to the current user's internet history folder.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires NT 4.0
  Windows 95/98: Requires Windows 95 or higher.
--------------------------------------------------------------------------------
@@GetAPMLineStatus
<GROUP SystemInformationRoutines.PowerManagement>
Summary:
  Returns the line status of the APM system.
Description:

  This function checks the line status of the APM system. If the PC is connected
  to a power plug, it is considered "online", otherwise "offline".
Result:

  The status of the APM system, see TAPMLineStatus for possible values.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows 2000 or later
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@TAPMLineStatus
<GROUP SystemInformationRoutines.PowerManagement>
Summary:
  Enumeration of APM line stati. Used as function result by
Description:
  Enumeration of APM line stati. Used as function result by
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
@@TAPMLineStatus.alsUnknown
  Unknown line status. This will be the result if the function could not determine the current line status.
@@TAPMLineStatus.alsOnline
  The PC is connected to a power plug.
@@TAPMLineStatus.alsOffline
  The PC is not connected to a power plug. That is, it is using the built-in battery.
--------------------------------------------------------------------------------
@@TAPMBatteryFlag
<GROUP SystemInformationRoutines.PowerManagement>
Summary:
  Enumeration of APM battery flags. Used as function result by
Description:
  Enumeration of APM battery flags. Used as function result by
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
@@TAPMBatteryFlag.abfUnknown
  Unknown battery status. The system could not read the battery status.
@@TAPMBatteryFlag.abfHigh
  The battery is charged.
@@TAPMBatteryFlag.abfLow
  The battery is semi-charged.
@@TAPMBatteryFlag.abfCritical
  The battery is almost empty. The user should close all applications and shut down the system in order to prevent loss of data.
@@TAPMBatteryFlag.abfCharging
  The battery is being charged.
@@TAPMBatteryFlag.abfNoBattery
  No battery present. Under normal circumstances, the system is attached to a power plug when you get this result.
--------------------------------------------------------------------------------
@@GetAPMBatteryFlag
<GROUP SystemInformationRoutines.PowerManagement>
Summary:
  Returns the charge status of the system battery.
Description:

  This function returns the charge status of the system battery.
Result:

  The status of the system battery, see TAPMBatteryFlag for possible values.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows 2000 or later
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetAPMBatteryLifePercent
<GROUP SystemInformationRoutines.PowerManagement>
Summary:
  Returns the percentage of full battery charge remaining.
Description:

  Returns the percentage of full battery charge remaining. The range of this value
  may be within 0 to 100, or 255 if the percentage is unknown.
Result:

  The percentage of full battery charge remaining.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows 2000 or later
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetAPMBatteryLifeTime
<GROUP SystemInformationRoutines.PowerManagement>
Summary:
  Returns the number of seconds of battery life reamining, or -1 if this time is unknown.
Description:

  Returns the number of seconds of battery life reamining, or -1 if this time is
  unknown.
Result:

  The remaining battery life time in seconds.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows 2000 or later
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetAPMBatteryFullLifeTime
<GROUP SystemInformationRoutines.PowerManagement>
Summary:
  Returns the number of seconds of battery life minutes when at full charge, or -1 if full batery lifetime is unknown.
Description:

  Returns the number of seconds of battery life minutes when at full charge, or -1
  if full batery lifetime is unknown.
Result:

  The number of seconds of battery life time when at full charge.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows 2000 or later
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetMaxAppAddress
<GROUP SystemInformationRoutines.Memory>
Summary:
  Returns a pointer to the highest memory address available to applications and DLLs.
Description:

  Returns a pointer to the highest memory address available to applications and DLLs.
  You can typecast the return value to a pointer to directly point to the specified
  memory address.
Result:

  The highest memory address available to applications and DLLs, casted into an
  integer.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetMinAppAddress
<GROUP SystemInformationRoutines.Memory>
Summary:
  Returns a pointer to the lowest memory address available to applications and DLLs.
Description:

  Returns a pointer to the lowest memory address available to applications and DLLs.
  You can typecast the return value to a pointer to directly point to the specified
  memory address.
Result:

  The lowest memory address available to applications and DLLs, casted into an
  integer.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetMemoryLoad
<GROUP SystemInformationRoutines.Memory>
Summary:
  Returns the current system memory load.
Description:

  This function returns the current system memory load. The result is a value
  between 0 and 100.
Result:

  The current system memory load.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetSwapFileSize
<GROUP SystemInformationRoutines.Memory>
Summary:
  Returns the current pagefile size.
Description:

  Returns the current system pagefile size in bytes.
Result:

  The current system pagefile size in bytes.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetSwapFileUsage
<GROUP SystemInformationRoutines.Memory>
Summary:
  Returns the percentage of swap file space occupied.
Description:

  Returns the percentage of swap file space occupied. This is a value between 0
  and 100.
Result:

  The percentage of swap file space occupied.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetTotalPhysicalMemory
<GROUP SystemInformationRoutines.Memory>
Summary:
  Returns the total size of physical memory.
Description:

  Returns the total size of physical memory in bytes.
Result:

  The total size of physical memory.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetFreePhysicalMemory
<GROUP SystemInformationRoutines.Memory>
Summary:
  Returns the size of free physical memory.
Description:

  Returns the size of free physical memory in bytes.
Result:

  The size of free physical memory.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetTotalPageFileMemory
<GROUP SystemInformationRoutines.Memory>
Summary:
  Returns the amount of pagefile memory.
Description:

  Returns the total size of pagefile memory available to the system.
Result:

  The total size of pagefile memory.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetFreePageFileMemory
<GROUP SystemInformationRoutines.Memory>
Summary:
  Returns the amount of free pagefile memory.
Description:

  Returns the amount of free pagefile memory.
Result:

  The amount of free pagefile memory.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetTotalVirtualMemory
<GROUP SystemInformationRoutines.Memory>
Summary:
  Returns the amount of virtual memory.
Description:

  Returns the total size of virtual memory available to the system.
Result:

  The total size of virtual memory.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetFreeVirtualMemory
<GROUP SystemInformationRoutines.Memory>
Summary:
  Returns the amount of free virtual memory.
Description:

  Returns the amount of free virtual memory.
Result:

  The amount of free virtual memory.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetKeyState
<GROUP SystemInformationRoutines.Keyboard>
Summary:
  Returns the state of a key.
Description:

  Returns the state of the virtual key passed. You can use any of the VK_* constants
  defined in Windows.pas.
Parameters:
  VirtualKey - Any virtual key code, for example VK_NUMLOCK. See Windows.pas for more constants.
Result:

  True, if the key is pressed or toggled. False otherwise.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetNumLockKeyState
<GROUP SystemInformationRoutines.Keyboard>
Summary:
  Returns the state of the Numlock key.
Description:

  Returns the state of the Numlock key. If Numlock is on, true will be returned and
  false otherwise.
Result:

  True, if the NumLock toggled. False otherwise.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetScrollLockKeyState
<GROUP SystemInformationRoutines.Keyboard>
Summary:
  Returns the state of the ScrollLock key.
Description:

  Returns the state of the ScrollLock key. If ScrollLock is on, true will be
  returned and false otherwise.
Result:

  True, if the ScrollLock toggled. False otherwise.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
@@GetCapsLockKeyState
<GROUP SystemInformationRoutines.Keyboard>
Summary:
  Returns the state of the CapsLock key.
Description:

  Returns the state of the CapsLock key. If CapsLock is on, true will be
  returned and false otherwise.
Result:

  True, if the CapsLock toggled. False otherwise.
Quick info:
  Unit: JclSysInfo
  Category: System Information Routines
  Donator: Peter Friese
  Delphi Versions: 4,5,6
  Kylix Versions: 1
  Free Pascal Compiler Versions: 1.x
  Windows NT/2000: Requires Windows NT 3.1 or later
  Windows 95/98: Requires Windows 95 or later.
--------------------------------------------------------------------------------
